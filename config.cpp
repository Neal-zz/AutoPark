#include "config.h"

float markerSize;

cv::Mat cameraMatrix;
cv::Mat distCoeffs;

std::vector<int> estimateIds;
std::vector<Eigen::Matrix4f> poseRelativeX;
//std::vector<Eigen::Matrix4f> poseRelativeX2;

bool loadConfig()
{
	markerSize = 90.0; // mm

	/*5m distance calibrate, focal voltage 49.0v*/
	//cameraMatrix = (cv::Mat_<float>(3, 3) <<
	//	4599.36990986978, 0, 1229.45122615674,
	//	0, 4599.01472296057, 1035.86627660865,
	//	0, 0, 1);
	//distCoeffs = (cv::Mat_<float>(5, 1) << -0.0469638215037372, 0.378119264645831, 3.02231470527462e-05, -0.000102803888848639, 0);

	/*4m distance calibrate, focal voltage 49.1v*/
	//cameraMatrix = (cv::Mat_<float>(3, 3) <<
	//	4607.59995212821, 0, 1251.73247090808,
	//	0, 4606.99927913796, 1038.13667244601,
	//	0, 0, 1);
	//distCoeffs = (cv::Mat_<float>(5, 1) << -0.0439097348264723, 0.357940483452069, 0.000247154936196330, 0.00115405459168531, 0);

	/*3m distance calibrate, focal voltage 49.3v*/
	//cameraMatrix = (cv::Mat_<float>(3, 3) <<
	//	4618.85821032607, 0, 1232.28038767378,
	//	0, 4618.47546671186, 1032.10719609247,
	//	0, 0, 1);
	//distCoeffs = (cv::Mat_<float>(5, 1) << -0.0394454438974830, 0.297464820561490, -0.000201522755624429, -0.000115950305758433, 0);

	/*2.5m distance calibrate, focal voltage 49.4v*/
	//cameraMatrix = (cv::Mat_<float>(3, 3) <<
	//	4631.89130258400, 0, 1241.23592951339,
	//	0, 4631.45170864007, 1036.71408315561,
	//	0, 0, 1);
	//distCoeffs = (cv::Mat_<float>(5, 1) << -0.0391232371959228, 0.228462991162669, 0.000255976856017532, 0.000493810101316951, 0);

	/*2m distance calibrate, focal voltage 49.8v*/
	cameraMatrix = (cv::Mat_<float>(3, 3) <<
		4706.52948328612, 0, 1256.71912511227,
		0, 4708.91443069093, 1030.03420884969,
		0, 0, 1);
	distCoeffs = (cv::Mat_<float>(5, 1) << -0.0509729679635145, 0.538453065956182, -0.000358308819910476, 0.00155968024441779, 0);

	/*1m distance calibrate, focal voltage 50.8v*/
	/*cameraMatrix = (cv::Mat_<float>(3, 3) <<
		4654.11867888994, 0, 1245.29685719068,
		0, 4653.15589790524, 1034.90501555150,
		0, 0, 1);
	distCoeffs = (cv::Mat_<float>(5, 1) << -0.0489768031701984, 0.265817562667347, 2.12051767261754e-05, 0.00102970716855826, 0);*/

	/*virtual*/
	//cameraMatrix = (cv::Mat_<float>(3, 3) <<
	//	4680.32634164823, 0, 1209.66870142702,
	//	0, 4683.07675769460, 949.738334886189,
	//	0, 0, 1);
	//distCoeffs = (cv::Mat_<float>(5, 1) << -0.0159473589558250, 0.198932995489121, -0.00612165007982056, -0.000585192174378942, 0); // k1, k2, p1, p2, k3



	estimateIds = {1,3,4,5,7};

	/*relative pose left*/
	Eigen::Matrix4f pRXTemp;
	pRXTemp << 0.769958, 0.120967, -0.626524, -115.435134,
		-0.072094, 0.992071, 0.102945, 3.856440,
		0.634009, -0.034095, 0.772574, -48.993855,
		0.000000, 0.000000, 0.000000, 1.000000;
	poseRelativeX.emplace_back(pRXTemp);
	pRXTemp << 1, 0, 0, 0,
		0, 1, 0, 0,
		0, 0, 1, 0,
		0, 0, 0, 1;
	poseRelativeX.emplace_back(pRXTemp);
	pRXTemp << 0.764130, -0.089538, 0.638818, 115.601421,
		0.085975, 0.995621, 0.036709, 4.193426,
		-0.639307, 0.026872, 0.768482, -41.116871,
		0.000000, 0.000000, 0.000000, 1.000000;
	poseRelativeX.emplace_back(pRXTemp);
	pRXTemp << 0.168722, -0.144956, 0.974947, 177.240046,
		0.124229, 0.984367, 0.124857, 17.521281,
		-0.977804, 0.100050, 0.184092, -149.153697,
		0.000000, 0.000000, 0.000000, 1.000000;
	poseRelativeX.emplace_back(pRXTemp);
	pRXTemp << -0.497638, -0.125260, 0.858293, 155.827576,
		0.109153, 0.972608, 0.205230, 32.968502,
		-0.860489, 0.195816, -0.470334, -268.721205,
		0.000000, 0.000000, 0.000000, 1.000000;
	poseRelativeX.emplace_back(pRXTemp);

	/*relative pose2 Right*/
	//Eigen::Matrix4f pRXTemp;
	//pRXTemp << 0.767301, 0.075949, -0.636774, -115.343174,
	//	-0.097923, 0.995194, 0.000703, 7.747009,
	//	0.633767, 0.061815, 0.771050, -42.187584,
	//	0.000000, 0.000000, 0.000000, 1.000000;
	//poseRelativeX.emplace_back(pRXTemp);
	//pRXTemp << 1, 0, 0, 0,
	//	0, 1, 0, 0,
	//	0, 0, 1, 0,
	//	0, 0, 0, 1;
	//poseRelativeX.emplace_back(pRXTemp);
	//pRXTemp << 0.765685, -0.100325, 0.635343, 117.194257,
	//	0.101181, 0.994250, 0.035061, 7.419033,
	//	-0.635208, 0.037439, 0.771433, -45.615261,
	//	0.000000, 0.000000, 0.000000, 1.000000;
	//poseRelativeX.emplace_back(pRXTemp);



	return true;
}